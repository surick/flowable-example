<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true">
	<!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
	<springProperty scope="context" name="log_name" source="spring.application.name"/>
	<property name="LOG_PATH" value="/zokoo-logs/${log_name}"></property>
	<!-- 彩色日志 -->
	<!-- 彩色日志依赖的渲染类 -->
	<conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
	<conversionRule conversionWord="wex"
					converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
	<!-- 彩色日志格式 -->
	<property name="CONSOLE_LOG_PATTERN"
			  value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }) [%t]{magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wex"/>
	<property name="FILE_LOG_PATTERN"
			  value="%d{yyyy-MM-dd HH:mm:ss.SSS} %5p ${PID:- } --- [%t] %-40.40logger{39} : %m%n%wex"/>


	<!--输出到控制台-->
	<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>${CONSOLE_LOG_PATTERN}</pattern>
			<charset>UTF-8</charset>
		</encoder>
	</appender>

	<!--info 级别的日志-->
	<!-- 按照每天生成日志文件 -->
	<appender name="INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
		<encoder>
			<pattern>${FILE_LOG_PATTERN}</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名-->
			<fileNamePattern>${LOG_PATH}/${log_name}.info.%d{yyyy-MM-dd}.log</fileNamePattern>
			<!--日志文件保留天数-->
			<MaxHistory>60</MaxHistory>
		</rollingPolicy>
	</appender>

	<!--WARN 级别的日志-->
	<appender name="WARN" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>WARN</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
		<encoder>
			<pattern>${FILE_LOG_PATTERN}</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/${log_name}.warn.%d{yyyy-MM-dd}.log</fileNamePattern>
			<MaxHistory>60</MaxHistory>
		</rollingPolicy>
	</appender>

	<!--ERROR 级别的日志-->
	<appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
		<encoder>
			<pattern>${FILE_LOG_PATTERN}</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/${log_name}.error.%d{yyyy-MM-dd}.log</fileNamePattern>
			<MaxHistory>60</MaxHistory>
		</rollingPolicy>
	</appender>

	<!--ERROR 级别的日志-->
	<appender name="DEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>DEBUG</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
		<encoder>
			<pattern>${FILE_LOG_PATTERN}</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/${log_name}.debug.%d{yyyy-MM-dd}.log</fileNamePattern>
			<MaxHistory>60</MaxHistory>
		</rollingPolicy>
	</appender>

	<!-- 解决 swagger 打异常Log 只是临时方案，不够优雅 -->
	<logger name="io.swagger.models.parameters.AbstractSerializableParameter" level="ERROR" />
	<!-- 众库日志输出级别 -->
	<logger name="cn.zokoo.flow" level="DEBUG" additivity="false">
		<appender-ref ref="CONSOLE"/>
	</logger>
	<!-- 非众库日志输出级别 -->
	<root level="ERROR">
		<appender-ref ref="CONSOLE"/>
		<appender-ref ref="INFO"/>
		<appender-ref ref="WARN"/>
		<appender-ref ref="ERROR"/>
	</root>
</configuration>